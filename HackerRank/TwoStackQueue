class Solution {
    static void Main(String[] args)
    {    
        MyQueue myQueue = new MyQueue();
	      int q = Convert.ToInt32(Console.ReadLine());
	
        for (int i = 0; i < q; i++)
        {
            string query = Console.ReadLine();
			      string[] aquery = query.Split(' ');
            int[] ret = Array.ConvertAll<string,int>(aquery, Int32.Parse);           
            switch (ret[0])
            {
                case 1:
                    myQueue.Enqueue(Convert.ToInt32(ret[1]));
                break;

                case 2:
                    myQueue.Dequeue();
                break;

                case 3:
                    myQueue.Print();
                break;

                default:
                break;
            }
        }
    }
}
class MyQueue
{
	Stack<int> enqueStack = new Stack<int>();
	Stack<int> dequeStack = new Stack<int>();
	
	public void Enqueue	(int item)
	{
		enqueStack.Push(item);
	}
	
	public void Dequeue ()
	{
		if (dequeStack.Count == 0)
		{
			while(enqueStack.Count > 0)
			{
				dequeStack.Push(enqueStack.Peek());
				enqueStack.Pop();
			}
		}
		dequeStack.Pop();
	}
	
	public void Print()
	{
		if (dequeStack.Count == 0)
		{
			while (enqueStack.Count > 0)
			{
				dequeStack.Push(enqueStack.Peek());
				enqueStack.Pop();
			}
		}
		Console.WriteLine(dequeStack.Peek());
	}
}	
